# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Telegram Chupakabrada Bot

on:
  push:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            rm -rf telegram_chupakabrada_bot
            git clone https://github.com/feel2code/telegram_chupakabrada_bot.git
            cd telegram_chupakabrada_bot
            mkdir markov_files
            cd telegram_chupakabrada_bot
            touch .env
            echo '' > .env
            echo DB_USER=${{ secrets.DB_USER }} >> .env
            echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo BOT_TOKEN=${{ secrets.BOT_TOKEN }} >> .env
            echo WEATHER_TOKEN=${{ secrets.WEATHER_TOKEN }} >> .env
            echo KEY_FOR_STATS=${{ secrets.KEY_FOR_STATS }} >> .env
            echo ADMIN_CHAT=${{ secrets.ADMIN_CHAT }} >> .env
            echo HOME_TELEGA=${{ secrets.HOME_TELEGA }} >> .env
            echo RATES_TOKEN=${{ secrets.RATES_TOKEN }} >> .env
            echo VOICES_PATH=${{ secrets.VOICES_PATH }} >> .env
            chmod +x install.sh
            ./install.sh
